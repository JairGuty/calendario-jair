{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","components/actions/events.js","components/actions/auth.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-message-es.js","components/calendar/CalendarEvent.js","components/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","cheking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","filter","e","id","map","auth","checking","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","NavBar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","masEnd","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","dispath","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2280b1dd.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew:  '[event] Star add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event update',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    // authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    cheking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(), // Viene de la base de datos\r\n//     title: 'Cumpleaños del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Jair'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n        switch ( action.type ) {\r\n            case types.eventSetActive:\r\n                return {\r\n                    ...state,\r\n                    activeEvent: action.payload\r\n                }\r\n            case types.eventAddNew:\r\n                return {\r\n                    ...state,\r\n                    events: [\r\n                        state.events,\r\n                        action.payload\r\n                    ]\r\n                }\r\n            case types.eventClearActiveEvent:\r\n                return {\r\n                    ...state,\r\n                    activeEvent: null\r\n                }\r\n            case types.eventUpdated:\r\n                return {\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        e => (e.id === action.payload.id ) ? action.payload : e\r\n                    )\r\n                }\r\n            case types.eventDeleted:\r\n                return {\r\n                    ...state,\r\n                    events: state.events.map(\r\n                        e => (e.id !== state.activeEvent.id )\r\n                    ),\r\n                    activeEvent: null\r\n                }\r\n            case types.eventLoaded:\r\n                return {\r\n                    ...state,\r\n                    events: [ ...action.payload ]\r\n                }\r\n            case types.eventLogout:\r\n                return {\r\n                    ...initialState\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n               \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n\r\n    if ( method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( \r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n    \r\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../../types/types';\nimport { fetchConToken } from '../../helpers/fetch';\nimport { prepareEvents } from '../../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n                if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../../helpers/fetch';\r\nimport { types } from '../../types/types';\r\nimport { eventLogout } from './events';\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date',new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n        \r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', {email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }    \r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        } \r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch(logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../actions/auth';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n\r\n            lEmail: 'antonio@gmail.com',\r\n            lPassword: '123456'\r\n    });\r\n\r\n   const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n    rName: 'Tali',\r\n    rEmail: 'tali@gmail.com',\r\n    rPassword1: '123456',\r\n    rPassword2: '123456',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n   const handleRegister = ( e ) => {\r\n    e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseña deben ser iguales', 'error');\r\n        }\r\n        console.log('?')\r\n        dispatch( startRegister( rEmail, rPassword1, rName) );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister } >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }                                                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }                                                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }                                                                 \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }                                                                \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../../types/types\";\r\n\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    }\r\n\r\n};\r\n  \r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst masEnd = now.clone().add(1, 'hours'); \r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: masEnd.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector(state => state.ui );\r\n    const { activeEvent } = useSelector(state => state.calendar );\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( masEnd.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState( true );\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }             \r\n    }, [ activeEvent, setFormValues ])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        //cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n    \r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndtDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha final debe de ser mayor a la de inicio');\r\n        }\r\n\r\n        if ( title.trim().length < 2) {\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        // Guardar en Base de datos\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n        \r\n        setTitleValid( true );\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo Evento' } </h1>\r\n            <hr />\r\n            <form className=\"container\"\r\n            onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndtDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispath = useDispatch();\r\n    // Abre el Modal\r\n    const handleClickNew = () => {\r\n        dispath( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick= { handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>   \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-message-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar );\r\n    const { uid } = useSelector(state => state.auth );\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    const onDoubleClick = (e) => {\r\n        // Abre el modal\r\n        dispatch( uiOpenModal() );\r\n        \r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        // Despliega el evento: Redux- state\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e)\r\n        localStorage.setItem('lastView', e );\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e);\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n           <NavBar />\r\n\r\n           <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\" \r\n                messages= { messages } \r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={onSelectEvent}\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />                            \r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../components/actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n    \r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute\r\n                        exact \r\n                        path=\"/login\"\r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute exact\r\n                    path=\"/\" \r\n                    component={ CalendarScreen }\r\n                    isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}